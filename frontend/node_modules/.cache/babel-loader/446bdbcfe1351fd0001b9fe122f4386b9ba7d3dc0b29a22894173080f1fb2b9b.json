{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    BarraNavegacao\n  },\n  data() {\n    return {\n      projetos: [],\n      projeto: {\n        descricao: \"\",\n        professorRepresentante: \"\"\n      }\n    };\n  },\n  mounted() {\n    console.log(AuthService.dados.token);\n    this.getProjetos();\n  },\n  methods: {\n    async getProjetos() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/projetos\", {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`\n          }\n        });\n        this.projetos = response.data;\n      } catch (ex) {\n        console.log(\"ERRO\", ex);\n      }\n    },\n    async salvar() {\n      try {\n        const response = await axios.post(\"http://localhost:8080/projetos\", this.projeto, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.status === 200 || response.status === 201) {\n          this.getProjetos();\n          this.projeto.descricao = \"\"; // ajuste para após salvar voltar o input em branco\n          this.projeto.professorRepresentante = \"\"; // ajuste para após salvar voltar o input em branco\n        } else {\n          console.log(\"Erro ao salvar projeto:\", response.data);\n        }\n      } catch (error) {\n        console.log(\"Erro ao salvar projeto:\", error);\n      }\n    },\n    abreEdit(id) {\n      this.$router.push(`/projetos/${id}`);\n    },\n    async excluiUsuario(id) {\n      try {\n        const response = await axios.delete(`http://localhost:8080/projetos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`\n          }\n        });\n        if (response.status === 200) {\n          this.getProjetos();\n        } else {\n          console.log(\"ERRO\", response.data);\n        }\n      } catch (e) {\n        console.log(\"ERRO\", e);\n      }\n    }\n  }\n};","map":{"version":3,"names":["BarraNavegacao","AuthService","axios","components","data","projetos","projeto","descricao","professorRepresentante","mounted","console","log","dados","token","getProjetos","methods","response","get","headers","Authorization","ex","salvar","post","status","error","abreEdit","id","$router","push","excluiUsuario","delete","e"],"sources":["/home/nomade00/Área de Trabalho/Projeto-Aplicacao-Hibrida-main/demomongosec-master/frontend/src/views/projetos/ProjetosView.vue"],"sourcesContent":["<template>\n  <barra-navegacao></barra-navegacao>\n\n  <div class=\"projetos\">\n    <div class=\"row g-0 justify-content-center\"> <!-- Centraliza o conteúdo horizontalmente -->\n      <!-- Coluna responsiva -->\n      <div class=\"col-lg-9 col-md-6 col-sm-8\"> <!-- Ajusta o tamanho da coluna em diferentes dispositivos -->\n        <!-- Card de login -->\n        <div v-if=\"!registerActive\" class=\"card login\" v-bind:class=\"{ error: emptyFields }\">\n\n          <h1>Projetos:</h1>\n\n          <fieldset>\n            <legend>Cadastro:</legend>\n            <form @submit.prevent=\"salvar\">\n              <div class=\"row gx-3 gy-2 align-items-center p-2\">\n                <div class=\"col-sm-4\">\n                  <input v-model=\"projeto.descricao\" type=\"text\" class=\"form-control\" placeholder=\"Projeto\" required>\n                </div>\n                <div class=\"col-sm-4\">\n                  <input v-model=\"projeto.professorRepresentante\" type=\"text\" class=\"form-control\"\n                    placeholder=\"Professor\" required>\n                </div>\n              </div>\n              <div class=\"row gx-3 gy-2 col-sm-2 align-items-center p-3\">\n                <p><button type=\"submit\" class=\"btn btn-primary\">Salvar</button></p>\n              </div>\n            </form>\n          </fieldset>\n          <table class=\"table table-dark table-striped\">\n            <thead table-primary>\n              <tr>\n                <th>Projeto:</th>\n                <th>Professor:</th>\n                <th>Editar dados:</th>\n              </tr>\n            </thead>\n            <tbody class=\"\">\n              <tr v-for=\"(u, i) in projetos\" v-bind:key=\"i\">\n                <td>{{ u.descricao }}</td>\n                <td>{{ u.professorRepresentante }}</td>\n                <td align=\"center\">\n                  <button class=\"btn btn-primary editar me-2\" @click=\"abreEdit(u.id)\">Editar</button>\n                  <button class=\"btn btn-danger excluir\" @click.prevent=\"excluiUsuario(u.id)\">Excluir</button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    BarraNavegacao,\n  },\n\n  data() {\n    return {\n      projetos: [],\n      projeto: {\n        descricao: \"\", \n        professorRepresentante: \"\",\n      },\n    };\n  },\n\n  mounted() {\n    console.log(AuthService.dados.token);\n    this.getProjetos();\n  },\n\n  methods: {\n    async getProjetos() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/projetos\", {\n          headers: { Authorization: `Bearer ${AuthService.dados.token}` },\n        });\n        this.projetos = response.data;\n      } catch (ex) {\n        console.log(\"ERRO\", ex);\n      }\n    },\n\n    async salvar() {\n      try {\n        const response = await axios.post(\"http://localhost:8080/projetos\",\n        this.projeto, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        if (response.status === 200 || response.status === 201) {\n          this.getProjetos();\n          this.projeto.descricao = \"\"; // ajuste para após salvar voltar o input em branco\n          this.projeto.professorRepresentante = \"\";  // ajuste para após salvar voltar o input em branco\n        } else {\n          console.log(\"Erro ao salvar projeto:\", response.data);\n        }\n      } catch (error) {\n        console.log(\"Erro ao salvar projeto:\", error);\n      }\n    },\n\n    abreEdit(id) {\n      this.$router.push(`/projetos/${id}`);\n    },\n\n    async excluiUsuario(id) {\n      try {\n        const response = await axios.delete(`http://localhost:8080/projetos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`,\n          },\n        });\n        if (response.status === 200) {\n          this.getProjetos();\n        } else {\n          console.log(\"ERRO\", response.data);\n        }\n      } catch (e) {\n        console.log(\"ERRO\", e);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\nth,\ntd {\n  text-align: center;\n}\n\n.card {\n  padding: 20px;\n  /* Define o espaçamento interno */\n}\n\n.form-control {\n  /* Ajuste a largura conforme necessário */\n  height: 30px;\n  /* Ajuste a altura conforme necessário */\n  font-size: 0.9em;\n  /* Ajuste o tamanho da fonte conforme necessário */\n  margin-left: 10px;\n  /* Ajuste a margem à esquerda conforme necessário */\n}\n\nbutton {\n  /* Ajuste o tamanho da fonte conforme necessário */\n  box-shadow: 1px 2px 1px 1px rgba(0, 0, 0, 0.745) !important;\n}\n\nbutton:hover {\n  color: black;\n}\n\ntable * {\n  border: solid 1px black;\n}\n\n@media only screen and (max-width: 768px) {\n  .menu-drop select {\n    width: 100%;\n  }\n\n  .card {\n    padding: 10px;\n  }\n\n  fieldset {\n    padding: 10px;\n  }\n\n  button {\n    width: 100%;\n    margin-top: 10px;\n  }\n}\n\n</style>\n"],"mappings":";AAuDA,OAAOA,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,WAAU,MAAO,wBAAwB;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVH;EACF,CAAC;EAEDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,OAAO,EAAE;QACPC,SAAS,EAAE,EAAE;QACbC,sBAAsB,EAAE;MAC1B;IACF,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAACV,WAAW,CAACW,KAAK,CAACC,KAAK,CAAC;IACpC,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMd,KAAK,CAACe,GAAG,CAAC,gCAAgC,EAAE;UACjEC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASlB,WAAW,CAACW,KAAK,CAACC,KAAM;UAAE;QAChE,CAAC,CAAC;QACF,IAAI,CAACR,QAAO,GAAIW,QAAQ,CAACZ,IAAI;MAC/B,EAAE,OAAOgB,EAAE,EAAE;QACXV,OAAO,CAACC,GAAG,CAAC,MAAM,EAAES,EAAE,CAAC;MACzB;IACF,CAAC;IAED,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI;QACF,MAAML,QAAO,GAAI,MAAMd,KAAK,CAACoB,IAAI,CAAC,gCAAgC,EAClE,IAAI,CAAChB,OAAO,EAAE;UACZY,OAAO,EAAE;YACPC,aAAa,EAAG,UAASlB,WAAW,CAACW,KAAK,CAACC,KAAM,EAAC;YAClD,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACO,MAAK,KAAM,GAAE,IAAKP,QAAQ,CAACO,MAAK,KAAM,GAAG,EAAE;UACtD,IAAI,CAACT,WAAW,CAAC,CAAC;UAClB,IAAI,CAACR,OAAO,CAACC,SAAQ,GAAI,EAAE,EAAE;UAC7B,IAAI,CAACD,OAAO,CAACE,sBAAqB,GAAI,EAAE,EAAG;QAC7C,OAAO;UACLE,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEK,QAAQ,CAACZ,IAAI,CAAC;QACvD;MACF,EAAE,OAAOoB,KAAK,EAAE;QACdd,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEa,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDC,QAAQA,CAACC,EAAE,EAAE;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAE,aAAYF,EAAG,EAAC,CAAC;IACtC,CAAC;IAED,MAAMG,aAAaA,CAACH,EAAE,EAAE;MACtB,IAAI;QACF,MAAMV,QAAO,GAAI,MAAMd,KAAK,CAAC4B,MAAM,CAAE,kCAAiCJ,EAAG,EAAC,EAAE;UAC1ER,OAAO,EAAE;YACPC,aAAa,EAAG,UAASlB,WAAW,CAACW,KAAK,CAACC,KAAM;UACnD;QACF,CAAC,CAAC;QACF,IAAIG,QAAQ,CAACO,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACT,WAAW,CAAC,CAAC;QACpB,OAAO;UACLJ,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEK,QAAQ,CAACZ,IAAI,CAAC;QACpC;MACF,EAAE,OAAO2B,CAAC,EAAE;QACVrB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEoB,CAAC,CAAC;MACxB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}