{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nexport default {\n  components: {\n    BarraNavegacao\n  },\n  data() {\n    return {\n      usuarios: [],\n      user: {\n        login: null,\n        senha: null\n      }\n    };\n  },\n  mounted() {\n    console.log(AuthService.dados.token);\n    this.getUsuarios();\n  },\n  methods: {\n    async getUsuarios() {\n      try {\n        let r = await fetch(\"http://localhost:8080/users\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`\n          }\n        });\n        r.json().then(j => {\n          this.usuarios = j;\n        });\n      } catch (ex) {\n        console.log(\"ERRO\", ex);\n      }\n    },\n    async salvar() {\n      this.user.permissoes = [\"ROLE_USER\"];\n      console.log(JSON.stringify(this.user));\n      if (this.user.login != null && this.user.senha != null) {\n        fetch(\"http://localhost:8080/users\", {\n          method: \"POST\",\n          body: JSON.stringify(this.user),\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(r => {\n          if (r.status != 200 || r.status != 201) {\n            r.json().then(j => {\n              console.log(\"ERRO\", j);\n            });\n          }\n          this.getUsuarios();\n        }).catch(e => {\n          console.log(\"ERRO\", e);\n        });\n      }\n    },\n    abreEdit(id) {\n      this.$router.push(`/usuarios/${id}`);\n    }\n  }\n};","map":{"version":3,"names":["BarraNavegacao","AuthService","components","data","usuarios","user","login","senha","mounted","console","log","dados","token","getUsuarios","methods","r","fetch","method","headers","Authorization","json","then","j","ex","salvar","permissoes","JSON","stringify","body","status","catch","e","abreEdit","id","$router","push"],"sources":["/home/nomade00/Área de Trabalho/Projeto-Aplicacao-Hibrida-main/demomongosec-master/frontend/src/views/usuarios/UsuariosView.vue"],"sourcesContent":["<template>\n  <barra-navegacao></barra-navegacao>\n\n<div class=\"login\">\n  <div class=\"row justify-content-center\"> <!-- Centraliza o conteúdo horizontalmente -->\n    <!-- Coluna responsiva -->\n    <div class=\"col-lg-9 col-md-6 col-sm-8\"> <!-- Ajusta o tamanho da coluna em diferentes dispositivos -->\n      <!-- Card de login -->\n      <div v-if=\"!registerActive\" class=\"card login\" v-bind:class=\"{ error: emptyFields }\">\n\n        <h1>Usuários</h1>\n\n        <fieldset>\n          <legend>Cadastro</legend>\n          <form class=\"form-group\">\n            <!--<p><label>Login</label><input type=\"text\" v-model=\"user.login\" /></p>-->\n            <input v-model=\"user.login\" type=\"login\" class=\"form-control\" \n              placeholder=\"Login\" required>\n            <p><label>Senha</label><input type=\"password\" v-model=\"user.senha\" /></p>\n            <p><button @click=\"salvar\">Salvar</button></p>\n          </form>\n        </fieldset>\n\n        <table class=\"table table-sm\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Login</th>\n              <th scope=\"col\">Permissões</th>\n            </tr>\n          </thead>\n          <tbody class=\"table-group-divider\">\n            <tr v-for=\"(u, i) in usuarios\" v-bind:key=\"i\" @click=\"abreEdit(u.id)\">\n              <td scope=\"row\">{{ u.id }}</td>\n              <td>{{ u.login }}</td>\n              <td>{{ u.permissoes.length }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n</template>\n\n<script>\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\n\nexport default {\n  components: {\n    BarraNavegacao,\n  },\n  data() {\n    return {\n      usuarios: [],\n      user: {\n        login: null,\n        senha: null,\n      },\n    };\n  },\n  mounted() {\n    console.log(AuthService.dados.token);\n    this.getUsuarios();\n  },\n  methods: {\n    async getUsuarios() {\n      try {\n        let r = await fetch(\"http://localhost:8080/users\", {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${AuthService.dados.token}` },\n        });\n        r.json().then((j) => {\n          this.usuarios = j;\n        });\n      } catch (ex) {\n        console.log(\"ERRO\", ex);\n      }\n    },\n    async salvar() {\n      this.user.permissoes = [\"ROLE_USER\"];\n      console.log(JSON.stringify(this.user));\n      if (this.user.login != null && this.user.senha != null) {\n        fetch(\"http://localhost:8080/users\", {\n          method: \"POST\",\n          body: JSON.stringify(this.user),\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`,\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((r) => {\n            if (r.status != 200 || r.status != 201) {\n              r.json().then((j) => {\n                console.log(\"ERRO\", j);\n              });\n            }\n            this.getUsuarios();\n          })\n          .catch((e) => {\n            console.log(\"ERRO\", e);\n          });\n      }\n    },\n    abreEdit(id) {\n      this.$router.push(`/usuarios/${id}`);\n    },\n  },\n};\n</script>\n\n<style scoped>\n.card {\n  padding: 20px;\n  /* Define o espaçamento interno */\n}\n\n.form-group {\n\n  /* Estilos para inputs dentro do form-group */\n  input {\n    margin-bottom: 20px !important;\n    /* Define a margem inferior */\n    border-radius: 10px !important;\n    /* Define o arredondamento dos cantos */\n  }\n}\n\ntable * {\n  border: solid 1px black;\n}\n\ntable tbody tr {\n  cursor: pointer;\n}\n\nfieldset {\n  border: solid 1px blue;\n}\n\nfieldset input[type=\"text\"] {\n  border: solid 1px blue;\n}\n\nfieldset input[type=\"password\"] {\n  border: solid 1px blue;\n}\n\nfieldset button {\n  border: solid 1px blue;\n}\n</style>"],"mappings":";AA8CA,OAAOA,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,WAAU,MAAO,wBAAwB;AAEhD,eAAe;EACbC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;QACJC,KAAK,EAAE,IAAI;QACXC,KAAK,EAAE;MACT;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAACT,WAAW,CAACU,KAAK,CAACC,KAAK,CAAC;IACpC,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,IAAIE,CAAA,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UACjDC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASlB,WAAW,CAACU,KAAK,CAACC,KAAM;UAAE;QAChE,CAAC,CAAC;QACFG,CAAC,CAACK,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAK;UACnB,IAAI,CAAClB,QAAO,GAAIkB,CAAC;QACnB,CAAC,CAAC;MACJ,EAAE,OAAOC,EAAE,EAAE;QACXd,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEa,EAAE,CAAC;MACzB;IACF,CAAC;IACD,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,CAACnB,IAAI,CAACoB,UAAS,GAAI,CAAC,WAAW,CAAC;MACpChB,OAAO,CAACC,GAAG,CAACgB,IAAI,CAACC,SAAS,CAAC,IAAI,CAACtB,IAAI,CAAC,CAAC;MACtC,IAAI,IAAI,CAACA,IAAI,CAACC,KAAI,IAAK,IAAG,IAAK,IAAI,CAACD,IAAI,CAACE,KAAI,IAAK,IAAI,EAAE;QACtDS,KAAK,CAAC,6BAA6B,EAAE;UACnCC,MAAM,EAAE,MAAM;UACdW,IAAI,EAAEF,IAAI,CAACC,SAAS,CAAC,IAAI,CAACtB,IAAI,CAAC;UAC/Ba,OAAO,EAAE;YACPC,aAAa,EAAG,UAASlB,WAAW,CAACU,KAAK,CAACC,KAAM,EAAC;YAClD,cAAc,EAAE;UAClB;QACF,CAAC,EACES,IAAI,CAAEN,CAAC,IAAK;UACX,IAAIA,CAAC,CAACc,MAAK,IAAK,GAAE,IAAKd,CAAC,CAACc,MAAK,IAAK,GAAG,EAAE;YACtCd,CAAC,CAACK,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,CAAC,IAAK;cACnBb,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEY,CAAC,CAAC;YACxB,CAAC,CAAC;UACJ;UACA,IAAI,CAACT,WAAW,CAAC,CAAC;QACpB,CAAC,EACAiB,KAAK,CAAEC,CAAC,IAAK;UACZtB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEqB,CAAC,CAAC;QACxB,CAAC,CAAC;MACN;IACF,CAAC;IACDC,QAAQA,CAACC,EAAE,EAAE;MACX,IAAI,CAACC,OAAO,CAACC,IAAI,CAAE,aAAYF,EAAG,EAAC,CAAC;IACtC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}