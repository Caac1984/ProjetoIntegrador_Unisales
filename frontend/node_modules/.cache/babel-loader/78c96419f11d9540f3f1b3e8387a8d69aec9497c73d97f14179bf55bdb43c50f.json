{"ast":null,"code":"import BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    BarraNavegacao\n  },\n  data() {\n    return {\n      grupo: {\n        id: \"\",\n        nome: \"\",\n        descricao: \"\"\n      }\n    };\n  },\n  async mounted() {\n    const grupoId = this.$route.params.id;\n    this.getGrupo(grupoId);\n  },\n  methods: {\n    async getGrupo(id) {\n      try {\n        const response = await axios.get(`http://localhost:8080/grupos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`\n          }\n        });\n        this.grupo = response.data;\n      } catch (error) {\n        console.log(\"Erro ao buscar grupo:\", error);\n      }\n    },\n    async editarGrupo() {\n      try {\n        const response = await axios.put(`http://localhost:8080/grupos/${this.grupo.id}`, this.grupo, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        if (response.status === 200) {\n          alert(\"Grupo atualizado com sucesso!\");\n        }\n      } catch (error) {\n        console.log(\"Erro ao atualizar grupo:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["BarraNavegacao","AuthService","axios","components","data","grupo","id","nome","descricao","mounted","grupoId","$route","params","getGrupo","methods","response","get","headers","Authorization","dados","token","error","console","log","editarGrupo","put","status","alert"],"sources":["/home/nomade00/Área de Trabalho/ProjetoIntegrador_Unisales/frontend/src/views/grupos/EditarGrupo.vue"],"sourcesContent":["<template>\n  <barra-navegacao></barra-navegacao>\n\n  <div class=\"editar\">\n    <div class=\"row g-0 justify-content-center\">\n      <div class=\"col-lg-9 col-md-6 col-sm-8\">\n        <div class=\"card\">\n          <h1>Editar Grupo</h1>\n          <form @submit.prevent=\"editarGrupo\">\n            <div class=\"row gx-3 gy-2 align-items-center p-2\">\n              <div class=\"col-sm-4\">\n                <input\n                  v-model=\"grupo.nome\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Nome do Grupo\"\n                  required\n                />\n              </div>\n              <div class=\"col-sm-4\">\n                <input\n                  v-model=\"grupo.descricao\"\n                  type=\"text\"\n                  class=\"form-control\"\n                  placeholder=\"Descrição\"\n                  required\n                />\n              </div>\n            </div>\n            <div class=\"row gx-3 gy-2 col-sm-0 align-items-center p-3\">\n              <button type=\"submit\" class=\"btn btn-primary\">Atualizar</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    BarraNavegacao,\n  },\n  data() {\n    return {\n      grupo: {\n        id: \"\",\n        nome: \"\",\n        descricao: \"\",\n      },\n    };\n  },\n  async mounted() {\n    const grupoId = this.$route.params.id;\n    this.getGrupo(grupoId);\n  },\n  methods: {\n    async getGrupo(id) {\n      try {\n        const response = await axios.get(`http://localhost:8080/grupos/${id}`, {\n          headers: { Authorization: `Bearer ${AuthService.dados.token}` },\n        });\n        this.grupo = response.data;\n      } catch (error) {\n        console.log(\"Erro ao buscar grupo:\", error);\n      }\n    },\n    async editarGrupo() {\n      try {\n        const response = await axios.put(\n          `http://localhost:8080/grupos/${this.grupo.id}`,\n          this.grupo,\n          {\n            headers: {\n              Authorization: `Bearer ${AuthService.dados.token}`,\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        if (response.status === 200) {\n          alert(\"Grupo atualizado com sucesso!\");\n        }\n      } catch (error) {\n        console.log(\"Erro ao atualizar grupo:\", error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AAwCA,OAAOA,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,WAAU,MAAO,wBAAwB;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,EAAE;QACRC,SAAS,EAAE;MACb;IACF,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,MAAMC,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACN,EAAE;IACrC,IAAI,CAACO,QAAQ,CAACH,OAAO,CAAC;EACxB,CAAC;EACDI,OAAO,EAAE;IACP,MAAMD,QAAQA,CAACP,EAAE,EAAE;MACjB,IAAI;QACF,MAAMS,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAE,gCAA+BV,EAAG,EAAC,EAAE;UACrEW,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASjB,WAAW,CAACkB,KAAK,CAACC,KAAM;UAAE;QAChE,CAAC,CAAC;QACF,IAAI,CAACf,KAAI,GAAIU,QAAQ,CAACX,IAAI;MAC5B,EAAE,OAAOiB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,KAAK,CAAC;MAC7C;IACF,CAAC;IACD,MAAMG,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMT,QAAO,GAAI,MAAMb,KAAK,CAACuB,GAAG,CAC7B,gCAA+B,IAAI,CAACpB,KAAK,CAACC,EAAG,EAAC,EAC/C,IAAI,CAACD,KAAK,EACV;UACEY,OAAO,EAAE;YACPC,aAAa,EAAG,UAASjB,WAAW,CAACkB,KAAK,CAACC,KAAM,EAAC;YAClD,cAAc,EAAE;UAClB;QACF,CACF,CAAC;QACD,IAAIL,QAAQ,CAACW,MAAK,KAAM,GAAG,EAAE;UAC3BC,KAAK,CAAC,+BAA+B,CAAC;QACxC;MACF,EAAE,OAAON,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEF,KAAK,CAAC;MAChD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}