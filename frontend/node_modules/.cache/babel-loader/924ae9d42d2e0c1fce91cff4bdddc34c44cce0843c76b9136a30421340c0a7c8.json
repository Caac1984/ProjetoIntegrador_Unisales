{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// Importação dos componentes e serviços necessários\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nimport axios from \"axios\";\nexport default {\n  // Definição dos componentes utilizados\n  components: {\n    BarraNavegacao\n  },\n  // Dados do componente\n  data() {\n    return {\n      usuarios: [],\n      // Lista de usuários\n      user: {\n        login: null,\n        senha: null\n      }\n    };\n  },\n  // Função chamada quando o componente é montado\n  mounted() {\n    console.log(AuthService.dados.token); // Exibe o token no console\n    this.getUsuarios(); // Chama a função para obter os usuários\n  },\n  // Métodos do componente\n  methods: {\n    // Função para obter os usuários\n    async getUsuarios() {\n      try {\n        let r = await fetch(\"http://localhost:8080/users\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`\n          } // Adiciona o token de autorização\n        });\n        r.json().then(j => {\n          this.usuarios = j; // Define a lista de usuários\n        });\n      } catch (ex) {\n        console.log(\"ERRO\", ex); // Exibe erro no console\n      }\n    },\n    // Função para salvar um novo usuário\n    async salvar() {\n      this.user.permissoes = [\"ROLE_USER\"]; // Define permissões padrão\n      console.log(JSON.stringify(this.user)); // Exibe os dados do usuário no console\n      if (this.user.login != null && this.user.senha != null) {\n        fetch(\"http://localhost:8080/users\", {\n          method: \"POST\",\n          body: JSON.stringify(this.user),\n          // Corpo da requisição com os dados do usuário\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`,\n            // Adiciona o token de autorização\n            \"Content-Type\": \"application/json\"\n          }\n        }).then(r => {\n          if (r.status != 200 || r.status != 201) {\n            r.json().then(j => {\n              console.log(\"ERRO\", j); // Exibe erro no console\n            });\n          }\n          this.getUsuarios(); // Atualiza a lista de usuários\n          // Reseta os campos do formulário\n          this.user.login = \"\";\n          this.user.senha = \"\";\n          this.user.nome = \"\";\n          this.user.sobrenome = \"\";\n          this.user.periodo = \"\";\n          this.user.permissoes = \"\";\n        }).catch(e => {\n          console.log(\"ERRO\", e); // Exibe erro no console\n        });\n      }\n    },\n    // Função para abrir a edição de um usuário\n    abreEdit(id) {\n      this.$router.push(`/usuarios/${id}`); // Navega para a rota de edição de usuário\n    },\n    // Função para excluir um usuário\n    async excluiUsuario(id) {\n      try {\n        const response = await axios.delete(`http://localhost:8080/users/${id}`, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}` // Adiciona o token de autorização\n          }\n        });\n        if (response.status === 200) {\n          this.getUsuarios(); // Atualiza a lista de usuários\n        } else {\n          console.log(\"ERRO\", response.data); // Exibe erro no console\n        }\n      } catch (e) {\n        console.log(\"ERRO\", e); // Exibe erro no console\n      }\n    }\n  }\n};","map":{"version":3,"names":["BarraNavegacao","AuthService","axios","components","data","usuarios","user","login","senha","mounted","console","log","dados","token","getUsuarios","methods","r","fetch","method","headers","Authorization","json","then","j","ex","salvar","permissoes","JSON","stringify","body","status","nome","sobrenome","periodo","catch","e","abreEdit","id","$router","push","excluiUsuario","response","delete"],"sources":["/home/nomade00/Área de Trabalho/Projeto-Aplicacao-Hibrida-main/demomongosec-master/frontend/src/views/usuarios/UsuariosView.vue"],"sourcesContent":["<template>\n  <!-- Componente da barra de navegação -->\n  <barra-navegacao></barra-navegacao>\n\n  <!-- Div principal que envolve a seção de usuários -->\n  <div class=\"usuarios\">\n    <!-- Linha centralizada horizontalmente -->\n    <div class=\"row g-0 justify-content-center\"> <!-- Centraliza o conteúdo horizontalmente -->\n      <!-- Coluna responsiva que ajusta o tamanho em diferentes dispositivos -->\n      <div class=\"col-lg-9 col-md-6 col-sm-8\"> <!-- Ajusta o tamanho da coluna em diferentes dispositivos -->\n        <!-- Card de login -->\n        <div v-if=\"!registerActive\" class=\"card login\" v-bind:class=\"{ error: emptyFields }\"> <!-- Exibe o card de login se registerActive for falso -->\n\n          <!-- Título da seção de usuários -->\n          <h1>Usuários:</h1>\n\n          <!-- Fieldset para agrupar o formulário de cadastro -->\n          <fieldset>\n            <legend>Cadastro:</legend>\n            <!-- Formulário de cadastro de usuários -->\n            <form>\n              <fieldset>\n                <!-- Primeira linha de inputs: Login e Senha -->\n                <div class=\"row gx-3 gy-2 align-items-center p-2\">\n                  <!-- Input para login -->\n                  <div class=\"col-sm-4 form-group\">\n                    <input v-model=\"user.login\" type=\"login\" class=\"form-control\" placeholder=\"Login\" required>\n                  </div>\n                  <!-- Input para senha -->\n                  <div class=\"col-sm-4\">\n                    <input v-model=\"user.senha\" type=\"senha\" class=\"form-control\" placeholder=\"Senha\" required>\n                  </div>\n                </div>\n                <!-- Segunda linha de inputs: Nome e Sobrenome -->\n                <div class=\"row gx-3 gy-2 align-items-center p-2\">\n                  <!-- Input para nome -->\n                  <div class=\"col-sm-4\">\n                    <input v-model=\"user.nome\" type=\"text\" class=\"form-control\" placeholder=\"Nome\" required>\n                  </div>\n                  <!-- Input para sobrenome -->\n                  <div class=\"col-sm-4\">\n                    <input v-model=\"user.sobrenome\" type=\"text\" class=\"form-control\" placeholder=\"Sobrenome\" required>\n                  </div>\n                </div>\n                <!-- Terceira linha de inputs: Período e Permissões -->\n                <div class=\"row gx-3 gy-2 align-items-center p-2\">\n                  <!-- Input para período -->\n                  <div class=\"col-sm-4\">\n                    <input v-model=\"user.periodo\" min=\"1\" max=\"10\" type=\"number\" class=\"form-control\" placeholder=\"Período\" required>\n                  </div>\n                  <!-- Seletor de permissões -->\n                  <div class=\"col-sm-8 menu-drop\">\n                    <select name=\"listaPermissoes\" id=\"permissoes\" class=\"form-select\" aria-label=\"\" placeholder=\"Permissões:\" required>\n                      <option value=\"ROLE_USER\">Usuário</option>\n                      <option value=\"ROLE_ADMIN\">Administrador</option>\n                    </select>\n                  </div>\n                </div>\n              </fieldset>\n              <!-- Botão de salvar -->\n              <div class=\"row gx-3 gy-2 col-sm-2 p-4 align-items-center\">\n                <button class=\"btn btn-primary salvar\" @click=\"salvar\">Salvar</button>\n              </div>\n            </form>\n          </fieldset>\n\n          <!-- Tabela de usuários -->\n          <table class=\"table table-pri table-striped\">\n            <!-- Cabeçalho da tabela -->\n            <thead>\n              <tr>\n                <th>Login:</th>\n                <th>Nome:</th>\n                <th>Sobrenome:</th>\n                <th>Período:</th>\n                <th>Editar dados:</th>\n              </tr>\n            </thead>\n            <!-- Corpo da tabela -->\n            <tbody class=\"table-group-divider\">\n              <tr v-for=\"(u, i) in usuarios\" v-bind:key=\"i\"> <!-- Loop para listar usuários -->\n                <td>{{ u.login }}</td>\n                <td>{{ u.nome }}</td>\n                <td>{{ u.sobrenome }}</td>\n                <td>{{ u.periodo }}</td>\n                <td class=\"bots\">\n                  <button class=\"btn btn-primary editar me-2\" @click=\"abreEdit(u.id)\">Editar</button> <!-- Botão para editar -->\n                  <button class=\"btn btn-danger excluir\" @click.prevent=\"excluiUsuario(u.id)\">Excluir</button> <!-- Botão para excluir -->\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// Importação dos componentes e serviços necessários\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nimport axios from \"axios\";\n\nexport default {\n  // Definição dos componentes utilizados\n  components: {\n    BarraNavegacao,\n  },\n  // Dados do componente\n  data() {\n    return {\n      usuarios: [], // Lista de usuários\n      user: {\n        login: null,\n        senha: null,\n      },\n    };\n  },\n  // Função chamada quando o componente é montado\n  mounted() {\n    console.log(AuthService.dados.token); // Exibe o token no console\n    this.getUsuarios(); // Chama a função para obter os usuários\n  },\n  // Métodos do componente\n  methods: {\n    // Função para obter os usuários\n    async getUsuarios() {\n      try {\n        let r = await fetch(\"http://localhost:8080/users\", {\n          method: \"GET\",\n          headers: { Authorization: `Bearer ${AuthService.dados.token}` }, // Adiciona o token de autorização\n        });\n        r.json().then((j) => {\n          this.usuarios = j; // Define a lista de usuários\n        });\n      } catch (ex) {\n        console.log(\"ERRO\", ex); // Exibe erro no console\n      }\n    },\n    // Função para salvar um novo usuário\n    async salvar() {\n      this.user.permissoes = [\"ROLE_USER\"]; // Define permissões padrão\n      console.log(JSON.stringify(this.user)); // Exibe os dados do usuário no console\n      if (this.user.login != null && this.user.senha != null) {\n        fetch(\"http://localhost:8080/users\", {\n          method: \"POST\",\n          body: JSON.stringify(this.user), // Corpo da requisição com os dados do usuário\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`, // Adiciona o token de autorização\n            \"Content-Type\": \"application/json\",\n          },\n        })\n          .then((r) => {\n            if (r.status != 200 || r.status != 201) {\n              r.json().then((j) => {\n                console.log(\"ERRO\", j); // Exibe erro no console\n              });\n            }\n            this.getUsuarios(); // Atualiza a lista de usuários\n            // Reseta os campos do formulário\n            this.user.login = \"\";\n            this.user.senha = \"\";\n            this.user.nome = \"\";\n            this.user.sobrenome = \"\";\n            this.user.periodo = \"\";\n            this.user.permissoes = \"\";\n          })\n          .catch((e) => {\n            console.log(\"ERRO\", e); // Exibe erro no console\n          });\n      }\n    },\n    // Função para abrir a edição de um usuário\n    abreEdit(id) {\n      this.$router.push(`/usuarios/${id}`); // Navega para a rota de edição de usuário\n    },\n    // Função para excluir um usuário\n    async excluiUsuario(id) {\n      try {\n        const response = await axios.delete(`http://localhost:8080/users/${id}`, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`, // Adiciona o token de autorização\n          },\n        });\n        if (response.status === 200) {\n          this.getUsuarios(); // Atualiza a lista de usuários\n        } else {\n          console.log(\"ERRO\", response.data); // Exibe erro no console\n        }\n      } catch (e) {\n        console.log(\"ERRO\", e); // Exibe erro no console\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Estilo para os cabeçalhos da tabela */\nth {\n  text-align: center; /* Centraliza o texto */\n}\n\n/* Estilo para as células da tabela */\ntd {\n  text-align: center; /* Centraliza o texto */\n}\n\n/* Estilo para o card */\n.card {\n  padding: 20px; /* Define o espaçamento interno */\n}\n\n/* Estilo para o seletor de permissões */\n.form-select {\n  width: 40%; /* Ajuste a largura conforme necessário */\n  height: 38px; /* Ajuste a altura conforme necessário */\n  font-size: 0.9em; /* Ajuste o tamanho da fonte conforme necessário */\n  margin-left: 10px; /* Ajuste a margem à esquerda conforme necessário */\n}\n\n/* Estilo para os inputs */\n.form-control {\n  height: 30px; /* Ajuste a altura conforme necessário */\n  font-size: 0.9em; /* Ajuste o tamanho da fonte conforme necessário */\n  margin-left: 10px; /* Ajuste a margem à esquerda conforme necessário */\n}\n\n.form-group {\n\n  /* Estilos para inputs dentro do form-group */\n  input {\n    margin-bottom: 20px !important;\n    /* Define a margem inferior */\n    border-radius: 10px !important;\n    /* Define o arredondamento dos cantos */\n  }\n}\n\n.cadastro {\n  align-items: center;\n  /* Centraliza verticalmente os itens */\n  display: flexbox;\n}\n\nbutton:hover {\n  color: black;\n}\n\n.menu-drop select {\n  font-size: 0.9em;\n  /* Ajusta o tamanho da fonte conforme necessário */\n  margin-left: 10px;\n  /* Ajusta a margem à esquerda conforme necessário */\n  width: 49%;\n  /* Largura padrão de 49% */\n}\n\n/* Media query para ajustar a largura em telas menores */\n@media only screen and (max-width: 768px) {\n  .menu-drop select {\n    width: 100%;\n    /* Largura de 100% quando a largura da tela for menor que 768px */\n  }\n}\n\ntable * {\n  border: solid 1px black;\n}\n\n@media only screen and (max-width: 768px) {\n  .menu-drop select {\n    width: 100%;\n  }\n\n  .card {\n    padding: 10px;\n  }\n\n  fieldset {\n    padding: 10px;\n  }\n\n  button {\n    width: 100%;\n    margin-top: 10px;\n  }\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}