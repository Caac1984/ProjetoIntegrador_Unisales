{"ast":null,"code":"import { routerLink } from 'vue-router';\nexport default {\n  components: {\n    routerLink\n  },\n  data() {\n    return {\n      registerActive: false,\n      // Estado para alternar entre login e registro\n      emailLogin: '',\n      // Armazena o e-mail de login\n      senhaLogin: '',\n      // Armazena a senha de login\n      emailReg: '',\n      // Armazena o e-mail de registro\n      senhaReg: '',\n      // Armazena a senha de registro\n      confirmReg: '',\n      // Armazena a confirmação de senha de registro\n      emptyFields: false // Estado para verificar campos vazios\n    };\n  },\n  methods: {\n    toggleRegister() {\n      this.registerActive = !this.registerActive; // Alterna entre as visualizações de login e registro\n    },\n    doLogin() {\n      if (this.emailLogin && this.senhaLogin) {\n        // Lógica para realizar o login (pode incluir chamadas de API)\n        console.log('Logando com', this.emailLogin, this.senhaLogin);\n        this.emptyFields = false; // Reseta o estado de campos vazios\n      } else {\n        this.emptyFields = true; // Define que há campos vazios\n      }\n    }\n  }\n};","map":{"version":3,"names":["routerLink","components","data","registerActive","emailLogin","senhaLogin","emailReg","senhaReg","confirmReg","emptyFields","methods","toggleRegister","doLogin","console","log"],"sources":["/home/nomade00/Área de Trabalho/Projeto-Aplicacao-Hibrida-main/demomongosec-master/frontend/src/views/LoginView.vue"],"sourcesContent":["<template>\n   <!-- Template Vue.js -->\n   <div class=\"login\">\n      <!-- Div para a página de login -->\n      <div class=\"login-page\">\n         <!-- Container para conteúdo -->\n         <div class=\"container\">\n            <!-- Linha da grade -->\n            <div class=\"row justify-content-center\"> <!-- Centraliza o conteúdo horizontalmente -->\n               <!-- Coluna responsiva -->\n               <div class=\"col-lg-4 col-md-6 col-sm-8\"> <!-- Ajusta o tamanho da coluna em diferentes dispositivos -->\n                  <!-- Card de login -->\n                  <div v-if=\"!registerActive\" class=\"card login\" v-bind:class=\"{ error: emptyFields }\">\n                     <!-- Logo -->\n                     <div class=\"logo-container\">\n                        <img src=\"@/assets/logo.png\" alt=\"Logo da sua empresa\" class=\"logo\">\n                        <hr> <!-- Linha separadora -->\n                     </div>\n\n                     <!-- Título do card de login -->\n                     <h2>Login</h2>\n                     <!-- Formulário de login -->\n                     <form class=\"form-group\" @submit.prevent=\"doLogin\">\n                        <!-- Input de e-mail -->\n                        <input v-model=\"emailLogin\" type=\"email\" class=\"form-control\" placeholder=\"E-mail\" required>\n                        <br>\n                        <!-- Input de senha -->\n                        <input v-model=\"senhaLogin\" type=\"password\" class=\"form-control\" placeholder=\"Senha\" required>\n                        <br>\n                        <!-- Botão de envio do formulário de login -->\n                        <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\n                        <br><br>\n                        <!-- Link para redefinição de senha -->\n                        <router-link to=\"/alterarsenha\" target=\"_blank\">Esqueceu a senha?</router-link>\n                     </form>\n                  </div>\n\n                  <!-- Card de registro -->\n                  <div v-else class=\"card register\" v-bind:class=\"{ error: emptyFields }\">\n                     <!-- Título do card de registro -->\n                     <h1>Sign Up</h1>\n                     <!-- Formulário de registro -->\n                     <form class=\"form-group\" @submit.prevent=\"doRegister\">\n                        <!-- Input de e-mail para registro -->\n                        <input v-model=\"emailReg\" type=\"email\" class=\"form-control\" placeholder=\"E-mail\" required>\n                        <!-- Input de senha para registro -->\n                        <input v-model=\"senhaReg\" type=\"password\" class=\"form-control\" placeholder=\"Senha\" required>\n                        <!-- Input de confirmação de senha -->\n                        <input v-model=\"confirmReg\" type=\"password\" class=\"form-control\" placeholder=\"Confirma Senha\" required>\n                        <!-- Botão de envio do formulário de registro -->\n                        <input type=\"submit\" class=\"btn btn-primary\" value=\"Registrar\">\n                     </form>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   </div>\n</template>\n\n<script>\nimport { routerLink } from 'vue-router';\n\nexport default {\n   components: {\n      routerLink\n   },\n   data() {\n      return {\n         registerActive: false, // Estado para alternar entre login e registro\n         emailLogin: '', // Armazena o e-mail de login\n         senhaLogin: '', // Armazena a senha de login\n         emailReg: '', // Armazena o e-mail de registro\n         senhaReg: '', // Armazena a senha de registro\n         confirmReg: '', // Armazena a confirmação de senha de registro\n         emptyFields: false // Estado para verificar campos vazios\n      };\n   },\n   methods: {\n      toggleRegister() {\n         this.registerActive = !this.registerActive; // Alterna entre as visualizações de login e registro\n      },\n      doLogin() {\n         if (this.emailLogin && this.senhaLogin) {\n            // Lógica para realizar o login (pode incluir chamadas de API)\n            console.log('Logando com', this.emailLogin, this.senhaLogin);\n            this.emptyFields = false; // Reseta o estado de campos vazios\n         } else {\n            this.emptyFields = true; // Define que há campos vazios\n         }\n      },\n   \n   }\n};\n</script>\n\n<style scoped>\n/* Estilos para elementos de texto */\np {\n   line-height: 1rem; /* Define a altura da linha */\n}\n\n/* Estilos para título h1 */\nh1 {\n   margin-bottom: 1.5rem; /* Define a margem inferior */\n}\n\n/* Estilos para cards */\n.card {\n   padding: 20px; /* Define o espaçamento interno */\n}\n\n/* Estilos para grupos de formulários */\n.form-group {\n   /* Estilos para inputs dentro do form-group */\n   input {\n      margin-bottom: 20px; /* Define a margem inferior */\n      border-radius: 10px; /* Define o arredondamento dos cantos */\n   }\n}\n\n/* Estilos para a página de login */\n.login-page {\n   align-items: center; /* Centraliza verticalmente os itens */\n   display: flex; /* Define um layout flexível */\n   height: flex; /* Define a altura como flexível */\n}\n\n.logo {\n   width: 150px; /* Define a largura da logo */\n   height: auto; /* Mantém a altura proporcional para evitar distorções */\n}\n</style>\n"],"mappings":"AA6DA,SAASA,UAAS,QAAS,YAAY;AAEvC,eAAe;EACZC,UAAU,EAAE;IACTD;EACH,CAAC;EACDE,IAAIA,CAAA,EAAG;IACJ,OAAO;MACJC,cAAc,EAAE,KAAK;MAAE;MACvBC,UAAU,EAAE,EAAE;MAAE;MAChBC,UAAU,EAAE,EAAE;MAAE;MAChBC,QAAQ,EAAE,EAAE;MAAE;MACdC,QAAQ,EAAE,EAAE;MAAE;MACdC,UAAU,EAAE,EAAE;MAAE;MAChBC,WAAW,EAAE,KAAI,CAAE;IACtB,CAAC;EACJ,CAAC;EACDC,OAAO,EAAE;IACNC,cAAcA,CAAA,EAAG;MACd,IAAI,CAACR,cAAa,GAAI,CAAC,IAAI,CAACA,cAAc,EAAE;IAC/C,CAAC;IACDS,OAAOA,CAAA,EAAG;MACP,IAAI,IAAI,CAACR,UAAS,IAAK,IAAI,CAACC,UAAU,EAAE;QACrC;QACAQ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAE,IAAI,CAACV,UAAU,EAAE,IAAI,CAACC,UAAU,CAAC;QAC5D,IAAI,CAACI,WAAU,GAAI,KAAK,EAAE;MAC7B,OAAO;QACJ,IAAI,CAACA,WAAU,GAAI,IAAI,EAAE;MAC5B;IACH;EAEH;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}