{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    BarraNavegacao\n  },\n  data() {\n    return {\n      grupos: []\n    };\n  },\n  async mounted() {\n    this.getGrupos();\n  },\n  methods: {\n    async getGrupos() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/grupos\", {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`\n          }\n        });\n        this.grupos = response.data;\n      } catch (error) {\n        console.log(\"Erro ao buscar grupos:\", error);\n      }\n    },\n    editarGrupo(id) {\n      this.$router.push(`/grupos/editar/${id}`);\n    },\n    async excluirGrupo(id) {\n      try {\n        const response = await axios.delete(`http://localhost:8080/grupos/${id}`, {\n          headers: {\n            Authorization: `Bearer ${AuthService.dados.token}`\n          }\n        });\n        if (response.status === 200) {\n          this.getGrupos();\n        }\n      } catch (error) {\n        console.log(\"Erro ao excluir grupo:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["BarraNavegacao","AuthService","axios","components","data","grupos","mounted","getGrupos","methods","response","get","headers","Authorization","dados","token","error","console","log","editarGrupo","id","$router","push","excluirGrupo","delete","status"],"sources":["/home/nomade00/Área de Trabalho/ProjetoIntegrador_Unisales/frontend/src/views/grupos/ListaGrupos.vue"],"sourcesContent":["<template>\n  <barra-navegacao></barra-navegacao>\n\n  <div class=\"lista\">\n    <div class=\"row g-0 justify-content-center\">\n      <div class=\"col-lg-9 col-md-6 col-sm-8\">\n        <div class=\"card\">\n          <h1>Lista de Grupos</h1>\n          <table class=\"table table-striped table-primary\">\n            <thead class=\"table-dark\">\n              <tr>\n                <th>Nome do Grupo</th>\n                <th>Descrição</th>\n                <th>Ações</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"(grupo, index) in grupos\" :key=\"index\">\n                <td>{{ grupo.nome }}</td>\n                <td>{{ grupo.descricao }}</td>\n                <td>\n                  <button\n                    class=\"btn btn-primary me-2\"\n                    @click=\"editarGrupo(grupo.id)\"\n                  >\n                    Editar\n                  </button>\n                  <button\n                    class=\"btn btn-danger\"\n                    @click=\"excluirGrupo(grupo.id)\"\n                  >\n                    Excluir\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BarraNavegacao from \"@/components/BarraNavegacao.vue\";\nimport AuthService from \"@/services/AuthService\";\nimport axios from \"axios\";\n\nexport default {\n  components: {\n    BarraNavegacao,\n  },\n  data() {\n    return {\n      grupos: [],\n    };\n  },\n  async mounted() {\n    this.getGrupos();\n  },\n  methods: {\n    async getGrupos() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/grupos\", {\n          headers: { Authorization: `Bearer ${AuthService.dados.token}` },\n        });\n        this.grupos = response.data;\n      } catch (error) {\n        console.log(\"Erro ao buscar grupos:\", error);\n      }\n    },\n    editarGrupo(id) {\n      this.$router.push(`/grupos/editar/${id}`);\n    },\n    async excluirGrupo(id) {\n      try {\n        const response = await axios.delete(\n          `http://localhost:8080/grupos/${id}`,\n          {\n            headers: { Authorization: `Bearer ${AuthService.dados.token}` },\n          }\n        );\n        if (response.status === 200) {\n          this.getGrupos();\n        }\n      } catch (error) {\n        console.log(\"Erro ao excluir grupo:\", error);\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";AA4CA,OAAOA,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,WAAU,MAAO,wBAAwB;AAChD,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACD,MAAMC,OAAOA,CAAA,EAAG;IACd,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,8BAA8B,EAAE;UAC/DC,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASX,WAAW,CAACY,KAAK,CAACC,KAAM;UAAE;QAChE,CAAC,CAAC;QACF,IAAI,CAACT,MAAK,GAAII,QAAQ,CAACL,IAAI;MAC7B,EAAE,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;MAC9C;IACF,CAAC;IACDG,WAAWA,CAACC,EAAE,EAAE;MACd,IAAI,CAACC,OAAO,CAACC,IAAI,CAAE,kBAAiBF,EAAG,EAAC,CAAC;IAC3C,CAAC;IACD,MAAMG,YAAYA,CAACH,EAAE,EAAE;MACrB,IAAI;QACF,MAAMV,QAAO,GAAI,MAAMP,KAAK,CAACqB,MAAM,CAChC,gCAA+BJ,EAAG,EAAC,EACpC;UACER,OAAO,EAAE;YAAEC,aAAa,EAAG,UAASX,WAAW,CAACY,KAAK,CAACC,KAAM;UAAE;QAChE,CACF,CAAC;QACD,IAAIL,QAAQ,CAACe,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACjB,SAAS,CAAC,CAAC;QAClB;MACF,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,KAAK,CAAC;MAC9C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}